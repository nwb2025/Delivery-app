// Generated by view binder compiler. Do not edit!
package com.rec.uber.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckBox;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.rec.uber.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRegistrationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final AppCompatCheckBox cbTerms;

  @NonNull
  public final EditText etConfpassword;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etFname;

  @NonNull
  public final EditText etLname;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final LinearLayout llTerms;

  @NonNull
  public final TextInputLayout tFname;

  @NonNull
  public final TextInputLayout tLname;

  @NonNull
  public final TextInputLayout tlConfpassword;

  @NonNull
  public final TextInputLayout tlEmail;

  @NonNull
  public final TextInputLayout tlPassword;

  @NonNull
  public final TextView tvConditions;

  @NonNull
  public final TextView tvHaveAnAccount;

  @NonNull
  public final TextView tvLogin;

  @NonNull
  public final TextView tvTitle;

  private FragmentRegistrationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnRegister, @NonNull AppCompatCheckBox cbTerms,
      @NonNull EditText etConfpassword, @NonNull EditText etEmail, @NonNull EditText etFname,
      @NonNull EditText etLname, @NonNull EditText etPassword, @NonNull LinearLayout llTerms,
      @NonNull TextInputLayout tFname, @NonNull TextInputLayout tLname,
      @NonNull TextInputLayout tlConfpassword, @NonNull TextInputLayout tlEmail,
      @NonNull TextInputLayout tlPassword, @NonNull TextView tvConditions,
      @NonNull TextView tvHaveAnAccount, @NonNull TextView tvLogin, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.cbTerms = cbTerms;
    this.etConfpassword = etConfpassword;
    this.etEmail = etEmail;
    this.etFname = etFname;
    this.etLname = etLname;
    this.etPassword = etPassword;
    this.llTerms = llTerms;
    this.tFname = tFname;
    this.tLname = tLname;
    this.tlConfpassword = tlConfpassword;
    this.tlEmail = tlEmail;
    this.tlPassword = tlPassword;
    this.tvConditions = tvConditions;
    this.tvHaveAnAccount = tvHaveAnAccount;
    this.tvLogin = tvLogin;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRegister;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.cbTerms;
      AppCompatCheckBox cbTerms = ViewBindings.findChildViewById(rootView, id);
      if (cbTerms == null) {
        break missingId;
      }

      id = R.id.etConfpassword;
      EditText etConfpassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfpassword == null) {
        break missingId;
      }

      id = R.id.etEmail;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etFname;
      EditText etFname = ViewBindings.findChildViewById(rootView, id);
      if (etFname == null) {
        break missingId;
      }

      id = R.id.etLname;
      EditText etLname = ViewBindings.findChildViewById(rootView, id);
      if (etLname == null) {
        break missingId;
      }

      id = R.id.etPassword;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.llTerms;
      LinearLayout llTerms = ViewBindings.findChildViewById(rootView, id);
      if (llTerms == null) {
        break missingId;
      }

      id = R.id.tFname;
      TextInputLayout tFname = ViewBindings.findChildViewById(rootView, id);
      if (tFname == null) {
        break missingId;
      }

      id = R.id.tLname;
      TextInputLayout tLname = ViewBindings.findChildViewById(rootView, id);
      if (tLname == null) {
        break missingId;
      }

      id = R.id.tlConfpassword;
      TextInputLayout tlConfpassword = ViewBindings.findChildViewById(rootView, id);
      if (tlConfpassword == null) {
        break missingId;
      }

      id = R.id.tlEmail;
      TextInputLayout tlEmail = ViewBindings.findChildViewById(rootView, id);
      if (tlEmail == null) {
        break missingId;
      }

      id = R.id.tlPassword;
      TextInputLayout tlPassword = ViewBindings.findChildViewById(rootView, id);
      if (tlPassword == null) {
        break missingId;
      }

      id = R.id.tvConditions;
      TextView tvConditions = ViewBindings.findChildViewById(rootView, id);
      if (tvConditions == null) {
        break missingId;
      }

      id = R.id.tvHaveAnAccount;
      TextView tvHaveAnAccount = ViewBindings.findChildViewById(rootView, id);
      if (tvHaveAnAccount == null) {
        break missingId;
      }

      id = R.id.tvLogin;
      TextView tvLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvLogin == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentRegistrationBinding((ConstraintLayout) rootView, btnRegister, cbTerms,
          etConfpassword, etEmail, etFname, etLname, etPassword, llTerms, tFname, tLname,
          tlConfpassword, tlEmail, tlPassword, tvConditions, tvHaveAnAccount, tvLogin, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
